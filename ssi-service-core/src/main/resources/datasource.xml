<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation=" 
          http://www.springframework.org/schema/beans 
          http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
          http://www.springframework.org/schema/tx 
          http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
          http://www.springframework.org/schema/context 
          http://www.springframework.org/schema/context/spring-context-3.1.xsd 
          http://www.springframework.org/schema/aop 
          http://www.springframework.org/schema/aop/spring-aop-3.1.xsd"
	default-lazy-init="false">


	<bean id="parentDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="username" value="ssi" />
		<property name="password" value="ssitest" />
		<property name="initialSize" value="10" />
		<property name="maxActive" value="500" />
		<property name="maxIdle" value="40" />
		<property name="minIdle" value="10" />
		<property name="maxWait" value="3000" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="validationQuery" value="SELECT 1 FROM DUAL" />
	</bean>

	<bean parent="parentDataSource" id="dataSource1">
		<property name="url"
			value="jdbc:mysql://localhost:3306/ssidb?useUnicode=true&amp;autoReconnect=true&amp;failOverReadOnly=false&amp;maxReconnects=10
&amp;characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull" />
	</bean>

	<bean id="dataSource2" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@115.29.210.155:1521:ORCL" />
		<property name="username" value="ssi" />
		<property name="password" value="oracle" />
		<property name="initialSize" value="10" />
		<property name="maxActive" value="500" />
		<property name="maxIdle" value="40" />
		<property name="minIdle" value="10" />
		<property name="maxWait" value="3000" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="testWhileIdle" value="true" />
		<property name="validationQuery" value="SELECT 1 FROM DUAL" />
	</bean>

	<bean id="dynamicDataSource" class="com.hm.SSI.util.DynamicDataSource">
		<property name="targetDataSources">
			<map>
				<entry value-ref="dataSource1" key="EC1" />
				<entry value-ref="dataSource2" key="EC2" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSource1" />
	</bean>

	<!-- DAO层通过注解引入jdbcTemplate -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dynamicDataSource" />
	</bean>

	<!-- Spring提供的iBatis的SqlMap配置，并且指定了数据源对象 -->
	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation" value="classpath:sqlmap-config.xml" />
		<property name="dataSource" ref="dynamicDataSource" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dynamicDataSource" />
	</bean>

	<tx:advice id="dataSourcetx" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" propagation="REQUIRED" />
			<tx:method name="find*" read-only="true" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="delete*" propagation="REQUIRED"
				rollback-for="Exception" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:advisor advice-ref="dataSourcetx" pointcut="execution(* *..service..*.*(..))" />
	</aop:config>
	<aop:config>
		<aop:aspect ref="dataSourceInterceptor">
			<aop:pointcut expression="execution(* com.hm.SSI.manager.mysql.*.*(..))"
				id="mysqlDataSourceAspect" />
			<aop:pointcut expression="execution(* com.hm.SSI.manager.oracle.*.*(..))"
				id="oracleDataSourceAspect" />
			<aop:before pointcut-ref="mysqlDataSourceAspect" method="setMySqlDataSource" />
			<aop:before pointcut-ref="oracleDataSourceAspect" method="setOracleDataSource" />

		</aop:aspect>
	</aop:config>

</beans>